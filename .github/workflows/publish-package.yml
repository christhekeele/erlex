name: Publish ‚ùØ Package

on:
  # push:
  #   tags:
  #     - "v*"
  workflow_dispatch: {}

jobs:
  hex:
    runs-on: ${{ vars.PREFERRED_OS }}
    name: Publishing Package

    env:
      HEX_API_KEY: ${{ secrets.HEX_API_KEY }}
      MIX_ENV: prod

    steps:
      - uses: actions/checkout@v2

      - name: Install Erlang & Elixir
        id: beam-versions
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ vars.PREFERRED_ELIXIR }}
          otp-version: ${{ vars.PREFERRED_OTP }}

      - name: Restore mix dependency installation cache
        id: mix-deps-get-cache
        uses: actions/cache@v4
        with:
          path: deps
          key: cache-${{ vars.CACHE_VERSION }}-os-${{ runner.os }}-otp-${{ steps.beam-versions.outputs.otp-version }}-elixir-${{ steps.beam-versions.outputs.elixir-version }}-env-${{ env.MIX_ENV }}-mix-deps-get-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install mix dependencies
        if: steps.mix-deps-get-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Restore mix dependency compilation cache
        id: mix-deps-compile-cache
        uses: actions/cache@v4
        with:
          path: _build
          key: cache-${{ vars.CACHE_VERSION }}-os-${{ runner.os }}-otp-${{ steps.beam-versions.outputs.otp-version }}-elixir-${{ steps.beam-versions.outputs.elixir-version }}-env-${{ env.MIX_ENV }}-mix-deps-compile-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Compile mix dependencies
        if: steps.mix-deps-compile-cache.outputs.cache-hit != 'true'
        run: mix deps.compile

      - name: Publish package to hex.pm
        run: mix hex.publish --yes

  results:
    name: Publish Package Results
    runs-on: ${{ vars.PREFERRED_OS }}

    if: ${{ always() }}
    needs:
      - hex

    steps:
      - name: Test Status Succeeded
        if: ${{ needs.hex.result == 'success' }}
        run: exit 0

      - name: Test Status Failed
        if: ${{ needs.hex.result == 'failure' }}
        run: exit 1
